---
- name: Install and configure Nextcloud
  hosts: nextcloud
  become: true

  vars:
    # --- REQUIRED: change these (store secrets in Ansible Vault!) ---
    nextcloud_domain: "cloud.example.com"
    nextcloud_admin_user: "ncadmin"
    nextcloud_admin_pass: "CHANGE_ME_STRONG_ADMIN_PASSWORD"
    nextcloud_db_name: "nextcloud"
    nextcloud_db_user: "nextcloud"
    nextcloud_db_pass: "CHANGE_ME_STRONG_DB_PASSWORD"

    # --- Optional tweaks ---
    nextcloud_webroot: "/var/www/nextcloud"
    nextcloud_download_url: "https://download.nextcloud.com/server/releases/latest.zip"
    php_timezone: "UTC"              # set to your TZ, e.g. "Europe/Amsterdam"
    php_memory_limit: "512M"
    php_upload_max_filesize: "2G"
    php_post_max_size: "2G"

  pre_tasks:
    - name: Ensure APT cache is up to date (Debian/Ubuntu)
      apt:
        update_cache: true
        cache_valid_time: 3600

  tasks:
    - name: Install base packages (Apache, PHP, MariaDB, utilities)
      apt:
        name:
          - apache2
          - mariadb-server
          - unzip
          - curl
          - bzip2
          - libapache2-mod-php
          # PHP core + common Nextcloud extensions
          - php
          - php-bz2
          - php-intl
          - php-gd
          - php-mbstring
          - php-xml
          - php-zip
          - php-curl
          - php-imagick
          - php-gmp
          - php-bcmath
          - php-apcu
          - php-mysql
          # Needed for Ansible's MySQL modules
          - python3-pymysql
        state: present

    - name: Create Nextcloud web root
      file:
        path: "{{ nextcloud_webroot }}"
        state: directory
        owner: www-data
        group: www-data
        mode: "0755"

    - name: Download Nextcloud archive
      get_url:
        url: "{{ nextcloud_download_url }}"
        dest: /tmp/nextcloud.zip
        mode: "0644"
      register: dl

    - name: Unarchive Nextcloud (idempotent)
      unarchive:
        src: /tmp/nextcloud.zip
        dest: /var/www
        remote_src: true
        creates: "{{ nextcloud_webroot }}/version.php"

    - name: Ensure Nextcloud directory ownership
      file:
        path: "{{ nextcloud_webroot }}"
        state: directory
        owner: www-data
        group: www-data
        recurse: true

    - name: Enable Apache modules recommended by Nextcloud
      command: "a2enmod {{ item }}"
      args:
        creates: "/etc/apache2/mods-enabled/{{ item }}.load"
      with_items:
        - rewrite
        - headers
        - env
        - dir
        - mime
        - setenvif
      notify: Restart Apache

    - name: Create Apache vhost for Nextcloud
      copy:
        dest: /etc/apache2/sites-available/nextcloud.conf
        mode: "0644"
        content: |
          <VirtualHost *:80>
              ServerName {{ nextcloud_domain }}
              DocumentRoot {{ nextcloud_webroot }}

              <Directory {{ nextcloud_webroot }}>
                  Options +FollowSymlinks
                  AllowOverride All
                  Require all granted
                  <IfModule mod_dav.c>
                      Dav off
                  </IfModule>
                  SetEnv HOME {{ nextcloud_webroot }}
                  SetEnv HTTP_HOME {{ nextcloud_webroot }}
              </Directory>

              # Security & caching headers recommended by Nextcloud
              <IfModule mod_headers.c>
                  Header always set Referrer-Policy "no-referrer"
                  Header always set X-Content-Type-Options "nosniff"
                  Header always set X-Download-Options "noopen"
                  Header always set X-Frame-Options "SAMEORIGIN"
                  Header always set X-Permitted-Cross-Domain-Policies "none"
                  Header always set X-Robots-Tag "none"
                  Header always set X-XSS-Protection "1; mode=block"
              </IfModule>

              ErrorLog ${APACHE_LOG_DIR}/nextcloud_error.log
              CustomLog ${APACHE_LOG_DIR}/nextcloud_access.log combined
          </VirtualHost>
      notify: Reload Apache

    - name: Enable Nextcloud site
      command: a2ensite nextcloud.conf
      args:
        creates: /etc/apache2/sites-enabled/nextcloud.conf
      notify: Reload Apache

    - name: Disable Apache default site (optional)
      command: a2dissite 000-default.conf
      args:
        removes: /etc/apache2/sites-enabled/000-default.conf
      notify: Reload Apache

    # --- MariaDB: create database & user. Uses socket auth on Debian/Ubuntu ---
    - name: Ensure MariaDB is running
      service:
        name: mariadb
        state: started
        enabled: true

    - name: Create Nextcloud database
      community.mysql.mysql_db:
        name: "{{ nextcloud_db_name }}"
        state: present
        encoding: utf8mb4
        collation: utf8mb4_general_ci
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create Nextcloud DB user with privileges
      community.mysql.mysql_user:
        name: "{{ nextcloud_db_user }}"
        password: "{{ nextcloud_db_pass }}"
        priv: "{{ nextcloud_db_name }}.*:ALL"
        host: "localhost"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    # --- PHP configuration tweaks for large uploads/performance ---
    - name: Locate active php.ini for Apache
      shell: "php -i | awk -F'=> ' '/Loaded Configuration File/ {print $2}'"
      register: php_ini
      changed_when: false

    - name: Tune PHP settings
      lineinfile:
        path: "{{ php_ini.stdout }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: true
      loop:
        - { regexp: '^memory_limit\\s*=.*',        line: "memory_limit = {{ php_memory_limit }}" }
        - { regexp: '^upload_max_filesize\\s*=.*', line: "upload_max_filesize = {{ php_upload_max_filesize }}" }
        - { regexp: '^post_max_size\\s*=.*',       line: "post_max_size = {{ php_post_max_size }}" }
        - { regexp: '^;?date.timezone\\s*=.*',     line: "date.timezone = {{ php_timezone }}" }
      notify: Restart Apache

    # --- Non-interactive Nextcloud install via occ (idempotent using config.php) ---
    - name: Run Nextcloud installer (occ)
      command: >
        sudo -u www-data php occ maintenance:install
        --database "mysql"
        --database-name "{{ nextcloud_db_name }}"
        --database-user "{{ nextcloud_db_user }}"
        --database-pass "{{ nextcloud_db_pass }}"
        --admin-user "{{ nextcloud_admin_user }}"
        --admin-pass "{{ nextcloud_admin_pass }}"
        --data-dir "{{ nextcloud_webroot }}/data"
      args:
        chdir: "{{ nextcloud_webroot }}"
        creates: "{{ nextcloud_webroot }}/config/config.php"

    - name: Set trusted domain in config.php
      command: >
        sudo -u www-data php occ config:system:set trusted_domains 1
        --value="{{ nextcloud_domain }}"
      args:
        chdir: "{{ nextcloud_webroot }}"

    - name: Enable recommended Nextcloud apps (optional)
      command: "sudo -u www-data php occ app:enable {{ item }}"
      args:
        chdir: "{{ nextcloud_webroot }}"
      with_items:
        - files_pdfviewer
        - viewer
      register: enable_apps
      changed_when: "'enabled' in (enable_apps.stdout | default(''))"

    - name: Configure APCu local cache
      copy:
        dest: "{{ nextcloud_webroot }}/config/apcu.config.php"
        owner: www-data
        group: www-data
        mode: "0644"
        content: |
          <?php
          $CONFIG = array (
            'memcache.local' => '\OC\Memcache\APCu',
          );

    - name: Set up cron for background jobs every 5 minutes
      cron:
        name: "Nextcloud background jobs"
        user: www-data
        minute: "*/5"
        job: "php -f {{ nextcloud_webroot }}/cron.php >/dev/null 2>&1"

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

